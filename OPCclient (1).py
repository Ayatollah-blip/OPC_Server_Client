# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'controle.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from http import client
from opcua import Client
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_FormWriteAndRead(object):

    
    
    def setupUi(self, FormWriteAndRead):
        FormWriteAndRead.setObjectName("FormWriteAndRead")
        FormWriteAndRead.resize(662, 435)
        FormWriteAndRead.setStyleSheet("selection-background-color: qradialgradient(spread:repeat, cx:0.5, cy:0.5, radius:0.077, fx:0.5, fy:0.5, stop:0 rgba(0, 169, 255, 147), stop:0.497326 rgba(0, 0, 0, 147), stop:1 rgba(0, 169, 255, 147));")
        self.chkOnOff = QtWidgets.QCheckBox(FormWriteAndRead)
        self.chkOnOff.setGeometry(QtCore.QRect(80, 300, 251, 31))
        self.f=FormWriteAndRead
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.chkOnOff.setFont(font)
        self.chkOnOff.setObjectName("chkOnOff")
        self.label = QtWidgets.QLabel(FormWriteAndRead)
        self.label.setGeometry(QtCore.QRect(150, 20, 361, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(FormWriteAndRead)
        self.label_2.setGeometry(QtCore.QRect(90, 60, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.txtHumidity = QtWidgets.QLineEdit(FormWriteAndRead)
        self.txtHumidity.setGeometry(QtCore.QRect(240, 70, 261, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.txtHumidity.setFont(font)
        self.txtHumidity.setReadOnly(True)
        self.txtHumidity.setObjectName("txtHumidity")
        self.cmdMeasure = QtWidgets.QPushButton(FormWriteAndRead)
        self.cmdMeasure.setGeometry(QtCore.QRect(290, 250, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.cmdMeasure.setFont(font)
        self.cmdMeasure.setObjectName("cmdMeasure")
        self.cmdEnd = QtWidgets.QPushButton(FormWriteAndRead)
        self.cmdEnd.setGeometry(QtCore.QRect(490, 350, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.cmdEnd.setFont(font)
        self.cmdEnd.setObjectName("cmdEnd")
        self.txtTemperature = QtWidgets.QLineEdit(FormWriteAndRead)
        self.txtTemperature.setGeometry(QtCore.QRect(240, 130, 261, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.txtTemperature.setFont(font)
        self.txtTemperature.setReadOnly(True)
        self.txtTemperature.setObjectName("txtTemperature")
        self.txtTime = QtWidgets.QLineEdit(FormWriteAndRead)
        self.txtTime.setGeometry(QtCore.QRect(240, 180, 261, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.txtTime.setFont(font)
        self.txtTime.setReadOnly(True)
        self.txtTime.setObjectName("txtTime")
        self.label_3 = QtWidgets.QLabel(FormWriteAndRead)
        self.label_3.setGeometry(QtCore.QRect(90, 180, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(FormWriteAndRead)
        self.label_4.setGeometry(QtCore.QRect(60, 120, 171, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")

        self.retranslateUi(FormWriteAndRead)
        QtCore.QMetaObject.connectSlotsByName(FormWriteAndRead)
         #---------------------- Button  ------------------------#
        self.cmdEnd.clicked.connect(self.End)
        self.cmdMeasure.clicked.connect(self.Measure)
        self.chkOnOff.clicked.connect(self.check)
    def check(self)   :
        client=self.get_Connected()
        client.connect()
        led=client.get_node("ns=2;i=5")
        if self.chkOnOff.isChecked() == True :
            led.set_value(1)
        else:
             led.set_value(0)
              
        
    def End(self) :
        self.f.close()
    def Measure(self):
        client=self.get_Connected()
        client.connect()
        print("Client connected")
        temp=client.get_node("ns=2;i=2")
        Temperature=temp.get_value()
        self.txtTemperature.setText(str(Temperature))
        print("Temperature value : {}".format(Temperature))

        hum=client.get_node("ns=2;i=3")
        Humidity=hum.get_value()
        self.txtHumidity.setText(str(Humidity))
        print("Humidity value : {}".format(Temperature))

        tim=client.get_node("ns=2;i=4")
        Time=tim.get_value()
        self.txtTime.setText(str(Time))
        print("Time value : {}".format(Time))


    def get_Connected(self):
           url="opc.tcp://192.168.1.101:4080"
           return Client(url)
           

    def retranslateUi(self, FormWriteAndRead):
        _translate = QtCore.QCoreApplication.translate
        FormWriteAndRead.setWindowTitle(_translate("FormWriteAndRead", "Form"))
        self.chkOnOff.setText(_translate("FormWriteAndRead", "LED ON/OFF"))
        self.label.setText(_translate("FormWriteAndRead", "WRITE & READ"))
        self.label_2.setText(_translate("FormWriteAndRead", "Humidity"))
        self.cmdMeasure.setText(_translate("FormWriteAndRead", "Read"))
        self.cmdEnd.setText(_translate("FormWriteAndRead", "EXIT"))
        self.label_3.setText(_translate("FormWriteAndRead", "Time"))
        self.label_4.setText(_translate("FormWriteAndRead", "Temperature"))


    def retranslateUi(self, FormWriteAndRead):
        _translate = QtCore.QCoreApplication.translate
        FormWriteAndRead.setWindowTitle(_translate("FormWriteAndRead", "Form"))
        self.chkOnOff.setText(_translate("FormWriteAndRead", "LED ON/OFF"))
        self.label.setText(_translate("FormWriteAndRead", "WRITE & READ"))
        self.label_2.setText(_translate("FormWriteAndRead", "Humidity"))
        self.cmdMeasure.setText(_translate("FormWriteAndRead", "Read"))
        self.cmdEnd.setText(_translate("FormWriteAndRead", "EXIT"))
        self.label_3.setText(_translate("FormWriteAndRead", "Time"))
        self.label_4.setText(_translate("FormWriteAndRead", "Temperature"))



    def retranslateUi(self, FormWriteAndRead):
        _translate = QtCore.QCoreApplication.translate
        FormWriteAndRead.setWindowTitle(_translate("FormWriteAndRead", "Form"))
        self.chkOnOff.setText(_translate("FormWriteAndRead", "LED ON/OFF"))
        self.label.setText(_translate("FormWriteAndRead", "WRITE & READ"))
        self.label_2.setText(_translate("FormWriteAndRead", "Humidity"))
        self.cmdMeasure.setText(_translate("FormWriteAndRead", "Read"))
        self.cmdEnd.setText(_translate("FormWriteAndRead", "EXIT"))
        self.label_3.setText(_translate("FormWriteAndRead", "Time"))
        self.label_4.setText(_translate("FormWriteAndRead", "Temperature"))


 
    

if __name__ == "__main__":
    import sys
    
    app = QtWidgets.QApplication(sys.argv)
    FormWriteAndRead = QtWidgets.QWidget()
    ui = Ui_FormWriteAndRead()
    ui.setupUi(FormWriteAndRead)
    FormWriteAndRead.show()
    sys.exit(app.exec_())
